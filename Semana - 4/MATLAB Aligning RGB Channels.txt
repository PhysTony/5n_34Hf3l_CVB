% https://la.mathworks.com/help/matlab/ref/double.html
%Read the image
img = imread('course1image.jpg');
[height, width] = size(img);

B = img(1:height/3,:);
G = img((height/3)+1:(2*height/3),:);
R = img((2*height/3)+1:height,:);

ref_img_region = G;
[rg,cg] = size(ref_img_region);
ref_img_region = ref_img_region(ceil((rg-50)/2) :ceil((rg-50)/2) + 50,ceil((cg-50)/2) :ceil((cg-50)/2) + 50);
%disp(size(ref_img_region));
ref_img_region = double(ref_img_region);

nR = align(G,R);
nB = align(G,B);
%nR = align(B,R);
ColorImg_aligned = cat(3,nR,G,nB);
imshow(ColorImg_aligned);

% Find the minimun offset by ssdfunction 
function aligned = align(green,red)
    [red_row,red_col] = size(red);
    [green_row,green_col] = size(green);
    % checking SSD for cropped part of the images for faster calculation
    cropped_red = red(ceil((red_row-50)/2) : ceil((red_row-50)/2) + 50,ceil((red_col-50)/2) :ceil((red_col-50)/2) + 50);
    cropped_green = green(ceil((green_row-50)/2) : ceil((green_row-50)/2) + 50,ceil((green_col-50)/2) :ceil((green_col-50)/2) + 50);
    MiN = 9999999999;
    index = 0;
    dim = 1;
    for i = -10:10
        for j = -10:10
            %circshift(A,[i,j])
            ssd = SSD(cropped_green,circshift(cropped_red,[i,j]));
            if ssd < MiN
                MiN = ssd;
                index = i;
                dim = j;
            end
        end
    end
    aligned = circshift(red,[index,dim]);
end       
        
function ssd = SSD(a1,a2)
    x = double(a1)-double(a2);
    ssd = sum(x(:).^2);
end 